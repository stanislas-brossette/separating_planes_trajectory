INCLUDE_DIRECTORIES(BEFORE ${Boost_INCLUDE_DIR})

ENABLE_TESTING()

SET(Boost_USE_STATIC_LIBS ON)
SET(BOOST_COMPONENTS unit_test_framework)
SEARCH_FOR_BOOST()

INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/src")
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
ADD_DEFINITIONS(-DBOOST_TEST_DYN_LINK -DBOOST_TEST_MAIN)

ADD_DEFINITIONS(-DTESTS_DATA_DIR="${CMAKE_CURRENT_SOURCE_DIR}")
ADD_DEFINITIONS(-DCONFIGS_DATA_DIR="${CMAKE_CURRENT_SOURCE_DIR}/configs")

MACRO(ADD_SCENARIO name)
  ADD_EXECUTABLE(${name} ${name}.cc)
  TARGET_LINK_LIBRARIES(${name} ${Boost_LIBRARIES} feet-trajectory)
  #PKG_CONFIG_USE_DEPENDENCY(${name} manifolds)
  #PKG_CONFIG_USE_DEPENDENCY(${name} roboptim-core)
  #PKG_CONFIG_USE_DEPENDENCY(${name} roboptim-core-manifold)
  #PKG_CONFIG_USE_DEPENDENCY(${name} pgSolver)
  #TARGET_LINK_LIBRARIES(${name} debug PGSolver_d optimized PGSolver)
ENDMACRO(ADD_SCENARIO)

#macro(ADD_FEET_TRAJECTORY_TEST name)
#  ADD_EXECUTABLE(${name} unit-tests/${name}.cc)
#  target_link_libraries(${name} ${Boost_LIBRARIES} feet-trajectory)
#  #PKG_CONFIG_USE_DEPENDENCY(${name} manifolds)
#  #PKG_CONFIG_USE_DEPENDENCY(${name} roboptim-core)
#  #PKG_CONFIG_USE_DEPENDENCY(${name} roboptim-core-manifold)
#  #PKG_CONFIG_USE_DEPENDENCY(${name} pgSolver)
#  #TARGET_LINK_LIBRARIES(${name} debug PGSolver_d optimized PGSolver)
#  add_test(${name}Unit ${name})
#endmacro(ADD_FEET_TRAJECTORY_TEST)

#ADD_SCENARIO("straightTraj")
#ADD_SCENARIO("oneObstacleTraj")
#ADD_SCENARIO("oneObstacleHullTraj")
#ADD_SCENARIO("testBoxAbovePlanCstr")
#ADD_SCENARIO("generateTrajectoryPGSolver")
#ADD_SCENARIO("generateTrajectoryAltQP")
ADD_SCENARIO("generateTrajectoryAltQPJerk")
#ADD_SCENARIO("trajProblem")
#ADD_SCENARIO("compareResolutionMethods")

#ADD_FEET_TRAJECTORY_TEST("testMpcCondense")
#ADD_FEET_TRAJECTORY_TEST("testJerk3DIntegrator")
